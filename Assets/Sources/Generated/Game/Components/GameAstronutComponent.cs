//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity astronutEntity { get { return GetGroup(GameMatcher.Astronut).GetSingleEntity(); } }
    public AstronutComponent astronut { get { return astronutEntity.astronut; } }
    public bool hasAstronut { get { return astronutEntity != null; } }

    public GameEntity SetAstronut(string newName) {
        if (hasAstronut) {
            throw new Entitas.EntitasException("Could not set Astronut!\n" + this + " already has an entity with AstronutComponent!",
                "You should check if the context already has a astronutEntity before setting it or use context.ReplaceAstronut().");
        }
        var entity = CreateEntity();
        entity.AddAstronut(newName);
        return entity;
    }

    public void ReplaceAstronut(string newName) {
        var entity = astronutEntity;
        if (entity == null) {
            entity = SetAstronut(newName);
        } else {
            entity.ReplaceAstronut(newName);
        }
    }

    public void RemoveAstronut() {
        astronutEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AstronutComponent astronut { get { return (AstronutComponent)GetComponent(GameComponentsLookup.Astronut); } }
    public bool hasAstronut { get { return HasComponent(GameComponentsLookup.Astronut); } }

    public void AddAstronut(string newName) {
        var index = GameComponentsLookup.Astronut;
        var component = CreateComponent<AstronutComponent>(index);
        component.name = newName;
        AddComponent(index, component);
    }

    public void ReplaceAstronut(string newName) {
        var index = GameComponentsLookup.Astronut;
        var component = CreateComponent<AstronutComponent>(index);
        component.name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveAstronut() {
        RemoveComponent(GameComponentsLookup.Astronut);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAstronut;

    public static Entitas.IMatcher<GameEntity> Astronut {
        get {
            if (_matcherAstronut == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Astronut);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAstronut = matcher;
            }

            return _matcherAstronut;
        }
    }
}
